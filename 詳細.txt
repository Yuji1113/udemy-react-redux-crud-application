JSXの利点
アプリケーションの内部で
JSXはトランスパイルされJSコードに変換されている。
JSXはそのままでは実行できない（ブラウザで実行できない）
トランスパイル（JSXー>Javascriptに変換）はBabelが行っている

JSXは直感的に記述できるため
最終的な成果物の形式に近い状態で書ける。


Propsはイミュータブル
Stateはミュータブル

StateはClassコンポーネントで利用できる
Stateの変更はsetStateが必須：Do not mutate state directly. Use setState()
setStateで自動的にrender()が実行され再描画されるので明示的に描画処理が不要


REDUX
リダックスはFLUXアーキテクチャのひとつ。

REDUXのモチベーションは
コンポーネントの階層が大きくなった時に
簡単に共有できる

コンベンション：
REDUXアプリケーションコーディングの習慣。
覚えることが多いが慣れてしまえば
他プロジェクトのソースコードリーディングが早くなる
リーダブルなコードが書けるようになる。

action
アプリの中で何が起きたかを示すファイル
./src/actions/index.js
actionは
JSのオブジェクト
typeというキーと値（ユニーク）を持つ


actionCreator:actionを返す関数（exportしておく）

複数の場所で利用されるデータは
一箇所で定義するのがプログラミングの鉄則


リデューサー：
actionが発生した時に、actionのTYPEに応じて
状態（state）をどのように変化させるのかを定義する物

index.js
アプリ内の全reducerを統括

count.js
stateの初期値をオブジェクトとして定義
初期状態のstateはinitialState